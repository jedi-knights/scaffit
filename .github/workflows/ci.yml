name: CI

on:
  push:
    branches:
      - 'feature/*'
      - 'hotfix/*'

env:
    NODE_CACHE: npm
    NODE_VERSION: 20
    GO_VERSION: 1.21.2

jobs:
  Analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: ${{ env.NODE_CACHE }}

      - name: Install Node Dependencies
        run: npm install

      - name: Export Commit Message
        run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=%s)" >> $GITHUB_ENV

      - name: Lint Commit Message
        run: echo "$COMMIT_MESSAGE" | npx commitlint

      - name: Analyze Javascript Syntax
        run: npx eslint .releaserc.js commitlint.config.js

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false

      - name: Install Go Dependencies
        run: go mod download

      - name: Generate Mocks
        run: go generate ./...

      - name: Analyze Go Syntax
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54

  Test:
    runs-on: ubuntu-latest
    needs: Analyze

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false

      - name: Install Dependencies
        run: go mod download

      - name: Install Utilities
        run: |
          go install go.uber.org/mock/mockgen@v0.2.0
          go install github.com/onsi/ginkgo/v2/ginkgo@v2.12.1

      - name: Generate Mocks
        run: go generate ./...

      - name: Test
        run: ginkgo --junit-report junit.xml ./...

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/junit.xml'
          fail_on_failure: true
          require_tests: false
          annotate_notice: false
          detailed_summary: false

  Build:
    runs-on: ubuntu-latest
    needs: Test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false

      - name: Update Go Version
        run: |
          export go_mod="go.mod"
          export converted_go_mod="go.mod.converted"
          awk '/go [0-9]+\.[0-9]+\.[0-9]+$/ && !converted { sub(/\.[0-9]+$/, "", $2); converted=1 } 1' "$go_mod" > "$converted_go_mod"
          mv "$converted_go_mod" "$go_mod"

      - name: Install Dependencies
        run: go mod download

      - name: Compile
        run: go build -v ./...
